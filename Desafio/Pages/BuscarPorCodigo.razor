@page "/localidadecodigo"

@using BaltaDesafioBlazor.Shared.Models.Locality
@using BaltaDesafioBlazor.Domain.Handlers.Queries

@attribute [StreamRendering]

@inherits ComponentBase

@implements IDisposable

@inject ILocalityQueryHandler Handler

<h3>Localidades</h3>

@if (locality == null)
{
    <h4>Carregando...</h4>
}
else
{
    <div class="form-group">
        <label for="codigo">Digite o codigo da cidade:</label>
        <input id="codigo" @bind="codigo" class="form-control" />
    </div>

    <button @onclick="AtualizarLocalidades">Buscar</button>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>City</th>
                <th>State</th>
            </tr>
        </thead>
        <tbody>
            @if (locality != null)
            {
                <tr>
                    <td>@locality.Id</td>
                    <td>@locality.City</td>
                    <td>@locality.State</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    LocalityModel? locality;
    string codigo = string.Empty;
    CancellationTokenSource tokenSource = new();


    protected override async Task OnInitializedAsync()
    {
        await AtualizarLocalidades()
            .ConfigureAwait(false);
    }

    private async Task AtualizarLocalidades()
    {
        var result = await Handler.GetLocalityAsync(codigo, cancellationToken: tokenSource.Token);

        if (result.Success)
        {
            locality = result.Result;
        }
    }

    public void Dispose()
    {
        tokenSource.Cancel();
    }
}
