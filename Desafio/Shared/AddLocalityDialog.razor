@using BaltaDesafioBlazor.Domain.Contexts.LocalityContext
@using BaltaDesafioBlazor.Shared.Models.Locality
@using BaltaDesafioBlazor.Infra.Extensions.ModelExtensions

@inject LocalityHandler Handler
@inject NavigationManager NavigationManager
@inject IMessageService MessageService

<AuthorizeView>
    <Button Icon="@AntDesign.IconType.Outline.Plus"
            Type="@AntDesign.ButtonType.Primary"
            OnClick="OnOpen">
        Localidade
    </Button>
</AuthorizeView>
<Modal @bind-Visible="_isVisible"
       Footer="@footer"
       Centered="true" 
       Title="Adicionar localidade">
    <LocalityForm OnSubmit="OnSubmit" 
                  OnCancel="(() => _isVisible = false)"
                  @ref="_form"/>
</Modal>
@code {
    private LocalityForm? _form;
    private bool _isVisible;

    RenderFragment footer = @<Template></Template>;

    private void OnOpen()
    {
        _isVisible = true;
        _form?.Reset();
    }

    private async Task OnSubmit(LocalityModel model)
    {
        var command = model.ToCreateCommand();

        var result = await Handler.ExecuteAsync(command, Token);

        if (result.Success)
        {
            _isVisible = false;
            await Task.WhenAll(
                MessageService.Info("Localidade adicionada"),
                OnAdd.InvokeAsync())
                .ConfigureAwait(false);
        }
        else
        {
            await MessageService
                .Error("Erro ao adicionar localidade")
                .ConfigureAwait(false);
        }
    }

    [CascadingParameter] CancellationToken Token { get; set; }

    [Parameter]
    public EventCallback OnAdd { get; set; }
}
